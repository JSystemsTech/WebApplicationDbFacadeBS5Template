@import "../bootstrap/_functions.scss";
@import "../bootstrap/_variables.scss";
@import "../bootstrap/_mixins.scss";

$chart-label: $black !default;
$chart-grid: $gray-300 !default;

$custom-colors: ( "chart-label": $chart-label, "chart-grid": $chart-grid )!default;
// Merge the maps
$colors: map-merge($colors, $custom-colors);

$custom-theme-colors: ( "success-dark": #556B2F,"teal-default": $teal,"green-default": $green)!default;

$theme-colors: map-merge($theme-colors, $custom-theme-colors);
$theme-colors-rgb: map-loop($theme-colors, to-rgb, "$value");
$utilities-colors: map-merge($utilities-colors, $theme-colors-rgb);
$utilities-text-colors: map-loop($utilities-colors, rgba-css-var, "$key", "text");
$utilities-bg-colors: map-loop($utilities-colors, rgba-css-var, "$key", "bg");

label.required::after {
    content: '*';
    color: $orange;
    margin-left: 0.2em;
    font-weight: bold;
}

$img-gradient-start-pct: 0%;
$img-gradient-start-alpha: 0.3;
$img-gradient-start-color: rgba($dark,$img-gradient-start-alpha);
$img-gradient-end-pct: 80%;
$img-gradient-end-alpha: 1;
$img-gradient-end-color: rgba($dark,$img-gradient-end-alpha);
.img-gradient {
    position: relative;
    display: block;


    &:after {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        display: inline-block;
        background: -moz-linear-gradient(top, $img-gradient-start-color $img-gradient-start-pct, $img-gradient-end-color $img-gradient-end-pct); /* FF3.6+ */
        background: -webkit-linear-gradient(top, $img-gradient-start-color $img-gradient-start-pct, $img-gradient-end-color $img-gradient-end-pct); /* Chrome10+,Safari5.1+ */
        background: -o-linear-gradient(top, $img-gradient-start-color $img-gradient-start-pct, $img-gradient-end-color $img-gradient-end-pct); /* Opera 11.10+ */
        background: -ms-linear-gradient(top, $img-gradient-start-color $img-gradient-start-pct, $img-gradient-end-color $img-gradient-end-pct); /* IE10+ */
        background: linear-gradient(to bottom, $img-gradient-start-color $img-gradient-start-pct, $img-gradient-end-color $img-gradient-end-pct); /* W3C */
    }

    img {
        display: block;
    }
}

@mixin list-group-nav-variant($state, $background,$color-active-scale: 30%,$color-hover-scale: 20%,$color-focus-scale: 20%) {
    $color: color-contrast($background);

    $active-background-color: shade-color($background, $color-active-scale);

    @if (contrast-ratio($active-background-color, $background) < $min-contrast-ratio) {
        $active-background-color: tint-color($background, $color-active-scale);
    }

    $hover-background-color: shift-color($background, $color-hover-scale);
    $focus-background-color: shift-color($background, $color-focus-scale);

    .list-group.list-group-nav-#{$state} {
        .list-group-item {
            color: $color;
            background-color: $background;
            border: 0;
            text-align: center;

            &.list-group-item-action {
                &:hover {
                    color: color-contrast($hover-background-color);
                    background-color: $hover-background-color;
                }

                &:focus {
                    color: color-contrast($focus-background-color);
                    background-color: $focus-background-color;
                }

                &.active {
                    color: color-contrast($background);
                    background-color: $active-background-color;
                }
            }
        }
    }
}
@each $key,$val in $theme-colors {
    @include list-group-nav-variant($key,$val);
}